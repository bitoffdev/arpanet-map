{"version":3,"sources":["Data.ts","InfoTooltip.tsx","WikipediaAnchor.tsx","model/index.ts","GatewayDetail.tsx","leaflet-tooltip-layout.ts","MapContents.tsx","GitHubRibbon.tsx","App.tsx","index.tsx"],"names":["getComputerModel","computerModelId","a","fetch","then","response","json","body","entities","map","computerModel","id","name","computerModels","find","getPerson","personId","people","person","fullName","full_name","nickname","wikidataId","wikidata_id","StyledTrigger","styled","FaQuestionCircle","StyledTooltip","div","props","visible","InfoTooltip","message","useState","setVisibility","referenceElement","setReferenceElement","popperElement","setPopperElement","usePopper","placement","modifiers","options","offset","styles","attributes","ref","onMouseEnter","onMouseLeave","style","popper","pointerEvents","role","wdk","WBK","instance","sparqlEndpoint","WikipediaAnchor","children","href","onClick","console","log","url","getEntities","ids","languages","parse","wd","e","wikipediaUrl","sitelinks","enwiki","newWindow","window","open","focus","error","lazyRedirect","HOST_1982_REFERENCE","MANUAL_REFERENCE","RFC518_REFERENCE","addressRecordToAddress","addressRecord","reference","title1","title2","title3","street","city","state","postal_code","country","latitude","undefined","longitude","gatewayFromId","gatewayId","addresses","acronym","gateway_table","data","gw","short_name","gatewayAcronymFromId","Error","metadata","gatewayAcronym","gateway_metadata","row","gatewayMetadataFromAcronym","directory1982AddressRecord","host_geo_1982_index","map_connection_acronym_to_host_geo_1982","mapping","replace","host_geo_1982","address_record","directory1982AddressRecordFromGatewayAcronym","push","manualAddressRecord","manual_address_index","map_connection_acronym_to_manual_address","manual_addresses","manualAddressRecordFromGatewayAcronym","rfc518AddressRecord","index","map_connection_acronum_to_rfc518","rfc518_addresses","rfc518AddressRecordFromGatewayAcronym","long_name","description","StyledAddressContainer","StyledAddressHeader","StyledAddressBody","StyledTable","table","StyledGatewayDetailDiv","StatusReportRow","statusReport","setPerson","setComputerModel","useEffect","obtained_from","computer_model","address","rel","target","rfc","addrToJSX","addr","textDecoration","color","GatewayDetail","gateway","statusReports","setStatusReports","filter","marginTop","marginRight","length","markerList","polylineList","guard","_onPolylineCreated","removeAllPolyline","layer","pop","removeLayer","drawLine","i","marker","getPosition","_icon","markerX","x","markerY","y","getTooltip","_container","labelX","labelY","lineDest","L","point","destLatLng","layerPointToLatLng","ply","polyline","getLatLng","__ply","addTo","setRandomPos","labelDom","angle","Math","PI","dest","ceil","sin","cos","DomUtil","setPosition","normalize","l","distanceTo","fa","k","fr","el","translateString","transform","split","parseInt","computePositionStep","t","v_pos","v","b","area","innerWidth","innerHeight","sqrt","dpos","disp","j","u","u_pos","subtract","add","multiplyBy","leafletTooltip","p","d","min","abs","setTransform","layoutByForce","randomize","times","start","Promise","r","setTimeout","setEdgePosition","bounds","getBounds","northWest","latLngToLayerPoint","getNorthWest","southEast","getSouthEast","tooltip","width","offsetWidth","height","offsetHeight","isEdge","defaultIcon","Leaflet","icon","iconUrl","iconSize","MapContents","setIsSidebarOpen","setFocusedGateway","useMap","geoJsonLayer","setGeoJsonLayer","setData","loadData","key","result","eachLayer","remove","_geoJsonLayer","geoJSON","feature","s","properties","filename","interactive","pointToLayer","geoJsonPoint","latlng","onEachFeature","geometry","type","bindTooltip","permanent","on","_radius","getContent","unbindTooltip","pane","className","direction","sticky","opacity","resetMarker","getElement","classList","onPolylineCreated","setStyle","StyledRibbonAnchor","GitHubRibbon","loading","src","alt","data-recalc-dims","StyledContainer","StyledButton","button","StyledTabs","Tabs","GlobalStyle","createGlobalStyle","App","focusedGateway","isSidebarOpen","activeKey","setActiveKey","manifest","setManifest","trackPageView","useMatomo","manifestJson","snapshots","fileName","documentTitle","nextActiveMap","steps","currentIndex","findIndex","newIndex","max","sidebar","onSetOpen","background","zIndex","pullRight","MapContainer","flex","center","zoom","scrollWheelZoom","onChange","tabBarStyle","tabBarExtraContent","left","right","snapshot","tab","partialDateString","createInstance","urlBase","siteId","MatomaApp","MatomoProvider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0a54992.chunk.js","sourcesContent":["// export const getComputerModel = async (computerModelId) => {\n//     fetch('api/v1/')\n// }\n\nimport { PersonType } from \"arpanet-map\";\n\nexport const getComputerModel = async (computerModelId: number) => {\n  return await fetch(\"api/v1/computerModels.json\")\n    .then((response) => response.json())\n    .then((body) =>\n      body.entities.map((computerModel: any) => ({\n        computerModelId: computerModel.id,\n        name: computerModel.name,\n      }))\n    )\n    .then((computerModels) =>\n      computerModels.find(\n        (computerModel: any) =>\n          computerModel.computerModelId === computerModelId\n      )\n    );\n};\n\nexport const getPerson = async (personId: number) => {\n  return await fetch(\"api/v1/people.json\")\n    .then((response) => response.json())\n    .then((body) =>\n      body.people.map(\n        (person: any): PersonType => ({\n          personId: person.id,\n          fullName: person.full_name,\n          nickname: person.nickname,\n          wikidataId: person.wikidata_id,\n        })\n      )\n    )\n    .then((people) =>\n      people.find((person: PersonType) => person.personId === personId)\n    );\n};\n","import { useState } from \"react\";\nimport { FaQuestionCircle } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport { usePopper } from \"react-popper\";\n\nconst StyledTrigger = styled(FaQuestionCircle)`\n  animation: 4s wiggle ease infinite;\n  border-radius: 50%;\n\n  @keyframes wiggle {\n    0% {\n      transform: rotate(-3deg);\n      box-shadow: 0 2px 2px rgba(0, 0, 0, 0.2);\n    }\n    10% {\n      transform: rotate(20deg);\n    }\n    20% {\n      transform: rotate(-15deg);\n    }\n    30% {\n      transform: rotate(5deg);\n    }\n    40% {\n      transform: rotate(-1deg);\n    }\n    50% {\n      transform: rotate(0);\n      box-shadow: 0 2px 2px rgba(0, 0, 0, 0.2);\n    }\n  }\n`;\n\ninterface StyledTooltipProps {\n  visible: boolean;\n}\n\nconst StyledTooltip = styled.div<StyledTooltipProps>`\n  background: #333;\n  color: white;\n  font-weight: bold;\n  padding: 4px 8px;\n  font-size: 15px;\n  border-radius: 4px;\n  visibility: ${(props) => (props.visible ? \"visible\" : \"hidden\")};\n  /* Prevent the popper from obstructing other elements, especially when hidden which would make the UX unintuitive. */\n  pointer-events: none;\n`;\n\nexport const InfoTooltip = ({ message }: { message: string }) => {\n  const [visible, setVisibility] = useState(false);\n  const [referenceElement, setReferenceElement] = useState<HTMLElement | null>(\n    null\n  );\n  const [popperElement, setPopperElement] = useState<HTMLElement | null>(null);\n\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\n    placement: \"bottom\",\n    modifiers: [\n      {\n        name: \"offset\",\n        options: {\n          offset: [0, 3],\n        },\n      },\n    ],\n  });\n\n  return (\n    <>\n      <span\n        ref={setReferenceElement}\n        onMouseEnter={() => setVisibility(true)}\n        onMouseLeave={() => setVisibility(false)}\n      >\n        <StyledTrigger />\n      </span>\n\n      <div\n        ref={setPopperElement}\n        style={{ ...styles.popper, pointerEvents: \"none\" }}\n        {...attributes.popper}\n      >\n        <StyledTooltip role=\"tooltip\" visible={visible}>\n          {message}\n        </StyledTooltip>\n      </div>\n    </>\n  );\n};\n","import WBK from \"wikibase-sdk\";\n\nconst wdk = WBK({\n  instance: \"https://www.wikidata.org\",\n  sparqlEndpoint: \"https://query.wikidata.org/sparql\",\n});\n\ntype WikipediaAnchorProps = {\n  wikidataId: string;\n};\n\nconst WikipediaAnchor = ({\n  children,\n  wikidataId,\n}: React.PropsWithChildren<WikipediaAnchorProps>): React.ReactElement => {\n  const lazyRedirect = () => {\n    if (wikidataId == null) return;\n\n    console.log(wikidataId);\n\n    const url = wdk.getEntities({\n      ids: [wikidataId],\n      // TODO Allow language to be customized.\n      languages: [\"en\"],\n    });\n\n    fetch(url)\n      .then((response) => response.json())\n      .then(wdk.parse.wd.entities)\n      .then((entities) => {\n        const e = entities[wikidataId];\n        const wikipediaUrl = `https://en.wikipedia.org/wiki/${e.sitelinks.enwiki}`;\n        const newWindow = window.open(wikipediaUrl, \"_blank\");\n        if (newWindow) newWindow.focus();\n        else console.error(\"Could not open window\");\n      });\n  };\n\n  return wikidataId == null ? (\n    <span>{children}</span>\n  ) : (\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    <a href=\"#\" onClick={() => lazyRedirect()}>\n      {children}\n    </a>\n  );\n};\n\nexport default WikipediaAnchor;\n","import map_connection_acronym_to_host_geo_1982 from \"../tables/map_connection_acronym_to_host_geo_1982.json\";\nimport map_connection_acronym_to_manual_address from \"../tables/map_connection_acronym_to_manual_address.json\";\nimport map_connection_acronum_to_rfc518 from \"../tables/map_connection_acronym_to_rfc518.json\";\nimport host_geo_1982 from \"../tables/host_geo_1982.json\";\nimport manual_addresses from \"../tables/manual_addresses.json\";\nimport rfc518_addresses from \"../tables/rfc518_addresses.json\";\nimport gateway_table from \"../tables/gateway.json\";\nimport gateway_metadata from \"../tables/gateway_metadata.json\";\n\n/**\n * record from one of our address tables:\n * - host_geo_1982\n * - manual_addresses\n */\ntype AddressRecord = {\n  // index: number;\n  acronym: string;\n  title1: string | null;\n  title2: string | null;\n  title3: string | null;\n  street: string | null;\n  // unit: string;\n  city: string | null;\n  state: string | null;\n  postal_code: string | null;\n  country: string | null;\n};\n\ntype GatewayMetadataRecord = {\n  acronym: string;\n  long_name: string;\n  description: string | null;\n};\n\nexport type Reference = {\n  name: string;\n  url: string;\n};\n\nconst HOST_1982_REFERENCE: Reference = {\n  name: \"1982 ARPANET Directory\",\n  url: \"https://www.computerhistory.org/collections/catalog/102683804\",\n};\n\nconst MANUAL_REFERENCE: Reference = {\n  name: \"Manual Entry\",\n  url: \"#\",\n};\n\nconst RFC518_REFERENCE: Reference = {\n  name: \"RFC 518\",\n  url: \"https://www.rfc-editor.org/rfc/rfc518.txt\",\n};\n\nexport type Address = {\n  title1: string | undefined | null;\n  title2: string | undefined | null;\n  title3: string | undefined | null;\n  street: string | undefined | null;\n  city: string | undefined | null;\n  state: string | undefined | null;\n  postal_code: string | undefined | null;\n  country: string | undefined | null;\n\n  latitude: number | undefined;\n  longitude: number | undefined;\n\n  reference: Reference;\n};\n\nexport type Gateway = {\n  addresses: Array<Address>;\n  long_name: string;\n  description: string | null;\n};\n\nconst gatewayAcronymFromId = (gatewayId: number): string | null => {\n  for (let gw of gateway_table.data) {\n    if (gw.id === gatewayId) {\n      return gw.short_name;\n    }\n  }\n  return null;\n};\n\nconst gatewayMetadataFromAcronym = (\n  gatewayAcronym: string\n): GatewayMetadataRecord | null => {\n  for (let row of gateway_metadata.data) {\n    if (row.acronym === gatewayAcronym) {\n      return row;\n    }\n  }\n\n  return null;\n};\n\nconst directory1982AddressRecordFromGatewayAcronym = (\n  gatewayAcronym: string\n): AddressRecord | null => {\n  let host_geo_1982_index = null;\n  for (let mapping of map_connection_acronym_to_host_geo_1982.data) {\n    if (mapping.find === gatewayAcronym) {\n      host_geo_1982_index = mapping.replace;\n    }\n  }\n\n  if (host_geo_1982_index != null) {\n    for (let address_record of host_geo_1982.data) {\n      if (address_record.acronym === host_geo_1982_index) {\n        return address_record;\n      }\n    }\n  }\n\n  return null;\n};\n\nconst manualAddressRecordFromGatewayAcronym = (\n  gatewayAcronym: string\n): AddressRecord | null => {\n  let manual_address_index = null;\n  for (let mapping of map_connection_acronym_to_manual_address.data) {\n    if (mapping.find === gatewayAcronym) {\n      manual_address_index = mapping.replace;\n    }\n  }\n\n  if (manual_address_index != null) {\n    for (let address_record of manual_addresses.data) {\n      if (address_record.acronym === manual_address_index) {\n        return address_record;\n      }\n    }\n  }\n\n  return null;\n};\n\nconst rfc518AddressRecordFromGatewayAcronym = (\n  gatewayAcronym: string\n): AddressRecord | null => {\n  let index = null;\n  for (let mapping of map_connection_acronum_to_rfc518.data) {\n    if (mapping.find === gatewayAcronym) {\n      index = mapping.replace;\n    }\n  }\n\n  if (index != null) {\n    for (let address_record of rfc518_addresses.data) {\n      if (address_record.acronym === index) {\n        return address_record;\n      }\n    }\n  }\n\n  return null;\n};\n\nconst addressRecordToAddress = (\n  addressRecord: AddressRecord,\n  reference: Reference\n): Address => ({\n  title1: addressRecord.title1,\n  title2: addressRecord.title2,\n  title3: addressRecord.title3,\n  street: addressRecord.street,\n  city: addressRecord.city,\n  state: addressRecord.state,\n  postal_code: addressRecord.postal_code,\n  country: addressRecord.country,\n\n  latitude: undefined,\n  longitude: undefined,\n\n  reference,\n});\n\nexport const gatewayFromId = (gatewayId: number): Gateway => {\n  const addresses = [];\n  const acronym = gatewayAcronymFromId(gatewayId);\n\n  if (acronym == null) {\n    throw Error(\"Could not find gateway\");\n  }\n\n  const metadata = gatewayMetadataFromAcronym(acronym);\n  if (metadata == null) {\n    throw Error(\"Could not find metadata for gateway\");\n  }\n\n  const directory1982AddressRecord =\n    directory1982AddressRecordFromGatewayAcronym(acronym);\n  if (directory1982AddressRecord != null) {\n    addresses.push(\n      addressRecordToAddress(directory1982AddressRecord, HOST_1982_REFERENCE)\n    );\n  }\n\n  const manualAddressRecord = manualAddressRecordFromGatewayAcronym(acronym);\n  if (manualAddressRecord != null) {\n    addresses.push(\n      addressRecordToAddress(manualAddressRecord, MANUAL_REFERENCE)\n    );\n  }\n\n  const rfc518AddressRecord = rfc518AddressRecordFromGatewayAcronym(acronym);\n  if (rfc518AddressRecord != null) {\n    addresses.push(\n      addressRecordToAddress(rfc518AddressRecord, RFC518_REFERENCE)\n    );\n  }\n\n  return {\n    addresses,\n    long_name: metadata.long_name,\n    description: metadata.description,\n  };\n};\n","import styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport { GatewayType } from \"arpanet-map\";\nimport { getComputerModel, getPerson } from \"./Data\";\nimport { InfoTooltip } from \"./InfoTooltip\";\nimport WikipediaAnchor from \"./WikipediaAnchor\";\nimport { Address, gatewayFromId } from \"./model\";\nimport { FaLink } from \"react-icons/fa\";\n\nconst StyledAddressContainer = styled.div`\n  background-color: #eee;\n  border: 2px solid purple;\n  border-radius: 10px;\n  padding: 0px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\nconst StyledAddressHeader = styled.div`\n  margin: 0px;\n  padding: 10px;\n  background-color: purple;\n  color: white;\n`;\n\nconst StyledAddressBody = styled.div`\n  margin: 0px;\n  padding: 10px;\n`;\n\nconst StyledTable = styled.table`\n  table,\n  th,\n  td {\n    border: 1px solid black;\n  }\n\n  th,\n  td {\n    padding: 5px;\n  }\n`;\n\nconst StyledGatewayDetailDiv = styled.div`\n  font-family: \"Overpass\";\n  min-width: 300px;\n  max-width: 700px;\n  padding: 20px;\n`;\n\ntype GatewayDetailProps = {\n  // versionId: number;\n  gateway: GatewayType;\n};\n\nconst StatusReportRow = ({ statusReport }: { statusReport: any }) => {\n  const [person, setPerson] = useState<any | null>(null);\n  const [computerModel, setComputerModel] = useState<any | null>(null);\n\n  useEffect(() => {\n    getPerson(statusReport.obtained_from).then(setPerson);\n    getComputerModel(statusReport.computer_model).then(setComputerModel);\n  }, [statusReport]);\n\n  return (\n    <tr>\n      <td>{statusReport.address}</td>\n      <td>{computerModel && computerModel.name}</td>\n      <td>\n        {person && (\n          <WikipediaAnchor wikidataId={person.wikidataId}>\n            {person.nickname}\n          </WikipediaAnchor>\n        )}\n      </td>\n      <td>\n        <a\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          href={`https://www.rfc-editor.org/rfc/rfc${statusReport.rfc}.txt`}\n        >\n          {statusReport.rfc}\n        </a>\n      </td>\n    </tr>\n  );\n};\n\nconst addrToJSX = (addr: Address) => {\n  return (\n    <StyledAddressContainer>\n      <StyledAddressHeader>\n        <a\n          href={addr.reference.url}\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          style={{ textDecoration: \"none\", color: \"white\" }}\n        >\n          <FaLink /> Address from {addr.reference.name}\n        </a>\n      </StyledAddressHeader>\n      <StyledAddressBody>\n        <table>\n          {addr.title1 != null && (\n            <tr>\n              <td>{addr.title1}</td>\n            </tr>\n          )}\n          {addr.title2 != null && (\n            <tr>\n              <td>{addr.title2}</td>\n            </tr>\n          )}\n          {addr.title3 != null && (\n            <tr>\n              <td>{addr.title3}</td>\n            </tr>\n          )}\n          {addr.street != null && (\n            <tr>\n              <td>{addr.street}</td>\n            </tr>\n          )}\n          <tr>\n            <td>\n              {addr.city}, {addr.state} {addr.postal_code}\n            </td>\n          </tr>\n        </table>\n      </StyledAddressBody>\n    </StyledAddressContainer>\n  );\n};\n\nexport default function GatewayDetail({ gateway }: GatewayDetailProps) {\n  const [statusReports, setStatusReports] = useState<Array<any>>([]);\n\n  const gw = gatewayFromId(gateway.gatewayId);\n\n  useEffect(() => {\n    setStatusReports(() => []);\n\n    const { gatewayId } = gateway;\n    fetch(\"api/v1/statusReports.json\")\n      .then((response) => response.json())\n      .then((body) => {\n        return body.statusReports.filter(\n          (statusReport: any) => statusReport.gateway === gatewayId\n        );\n      })\n      .then(setStatusReports);\n  }, [gateway]);\n\n  return (\n    <StyledGatewayDetailDiv>\n      <h1>{gateway.name}</h1>\n      <h2>{gw.long_name}</h2>\n      <p>{gw.description}</p>\n      {gw.addresses.map(addrToJSX)}\n\n      {gateway.wikidataId && (\n        <div style={{ marginTop: \"15px\" }}>\n          <WikipediaAnchor wikidataId={gateway.wikidataId}>\n            Wikipedia\n          </WikipediaAnchor>\n        </div>\n      )}\n      <h2>\n        <span style={{ marginRight: \"10px\" }}>Status Reports</span>\n        <InfoTooltip message=\"Between September 1971 (RFC 235) and August 1972 (RFC 376), BBN issued status reports as RFCs approximately every two weeks. These reports detail information about the network status of hosts connected to ARPANET.\" />\n      </h2>\n      {statusReports.length === 0 ? (\n        <p>No status reports were found for this gateway.</p>\n      ) : (\n        <StyledTable>\n          <thead>\n            <tr>\n              <th>Address</th>\n              <th>Model</th>\n              <th>Obtained From</th>\n              <th>RFC</th>\n            </tr>\n          </thead>\n          <tbody>\n            {statusReports.map((statusReport) => (\n              <StatusReportRow\n                statusReport={statusReport}\n                key={statusReport.id}\n              ></StatusReportRow>\n            ))}\n          </tbody>\n        </StyledTable>\n      )}\n    </StyledGatewayDetailDiv>\n  );\n}\n","import { LineString, MultiLineString } from \"geojson\";\nimport L from \"leaflet\";\n\n// global variables\nlet map: L.Map;\nconst markerList: Array<SpecialMarker> = []; // all markers here\nconst polylineList: Array<L.Polyline> = []; // all polylines here\n\nlet guard = false;\n\ntype PolylineCreatedCallback =\n  | ((ply: L.Polyline<LineString | MultiLineString, any>) => void)\n  | null;\n\n// events\nlet _onPolylineCreated: PolylineCreatedCallback = null; // will be called after polyline has been created\n\ninterface SpecialMarker extends L.Marker {\n  __ply: L.Polyline<LineString | MultiLineString, any>;\n  disp: L.Point;\n  // _icon is a private member exposed by Leaflet that we need to access\n  _icon: HTMLElement;\n}\n\ninterface SpecialTooltip extends L.Tooltip {\n  // _container is a private member exposed by Leaflet that we need to access\n  _container: HTMLElement;\n}\n\nexport function initialize(\n  leafletMap: L.Map,\n  onPolylineCreated?: PolylineCreatedCallback\n) {\n  map = leafletMap;\n  polylineList.length = 0;\n\n  //default style\n  if (onPolylineCreated) {\n    _onPolylineCreated = onPolylineCreated;\n  } else {\n    _onPolylineCreated = (ply: L.Polyline) => {\n      ply.setStyle({\n        color: \"#90A4AE\",\n      });\n    };\n  }\n\n  layoutByForce(true);\n\n  // event registrations\n  map.on(\"zoomstart\", () => removeAllPolyline(map));\n  map.on(\"zoomend\", () => layoutByForce(false, 20));\n  map.on(\"dragend\", () => layoutByForce(false, 10));\n  map.on(\"resize\", () => layoutByForce(true, 50));\n}\n\n/**\n * Add leaflet marker to the list of markers tracked by this tooltip layout\n * module\n */\nexport function resetMarker(marker: L.Marker) {\n  const tooltip = marker.getTooltip();\n  if (tooltip === undefined)\n    throw Error(\"Expected argument marker to not be undefined\");\n\n  const name = tooltip.getContent();\n  if (name === undefined) throw Error(\"Expected tooltip to have content\");\n  const options = tooltip.options;\n  marker.unbindTooltip();\n\n  marker.bindTooltip(name, {\n    pane: options.pane,\n    offset: options.offset,\n    className: \"heading\",\n    permanent: true,\n    interactive: true,\n    direction: \"left\",\n    sticky: false,\n    opacity: options.opacity,\n  });\n  markerList.push(marker as SpecialMarker);\n}\n\nexport const getMarkers = () => markerList;\n\n/**\n * Clear all the lines connecting leaflet marker with the tooltips that we\n * are positioning\n *\n * @param map leaflet map\n */\nfunction removeAllPolyline(map: L.Map) {\n  while (polylineList.length > 0) {\n    const layer = polylineList.pop();\n    if (layer !== undefined) map.removeLayer(layer);\n  }\n}\n\n/**\n * Draw lines between markers and tooltips\n * @param map leaflet map\n */\nfunction drawLine(map: L.Map) {\n  removeAllPolyline(map);\n  for (let i = 0; i < markerList.length; i++) {\n    const marker: SpecialMarker = markerList[i] as SpecialMarker;\n    const { x: markerX, y: markerY } = getPosition(marker._icon);\n    const label = marker.getTooltip() as SpecialTooltip;\n    const labelDom = label._container;\n    let { x: labelX, y: labelY } = getPosition(labelDom);\n\n    if (labelX - markerX !== 0 || labelY - markerY !== 0) {\n      const lineDest = L.point(labelX, labelY);\n      const destLatLng = map.layerPointToLatLng(lineDest);\n\n      const ply = L.polyline([marker.getLatLng(), destLatLng]);\n      _onPolylineCreated && _onPolylineCreated(ply);\n      marker.__ply = ply;\n      polylineList.push(ply);\n      ply.addTo(map);\n    }\n  }\n}\n\nfunction setRandomPos() {\n  for (let i = 0; i < markerList.length; i++) {\n    const marker = markerList[i];\n    const label = marker.getTooltip() as SpecialTooltip;\n    const labelDom = label._container;\n    const { x, y } = getPosition(marker._icon);\n    // var angle = Math.floor(Math.random() * 19 + 1) * 2 * Math.PI / 20;\n    const angle = ((2 * Math.PI) / 6) * i;\n    const dest = L.point(\n      Math.ceil(x + 50 * Math.sin(angle)),\n      Math.ceil(y + 50 * Math.cos(angle))\n    );\n    L.DomUtil.setPosition(labelDom, dest);\n  }\n}\n\nconst scaleTo = (a: L.Point, b: L.Point): L.Point =>\n  L.point(a.x * b.x, a.y * b.y);\n\nfunction normalize(a: L.Point) {\n  const l = a.distanceTo(L.point(0, 0));\n  if (l === 0) {\n    return a;\n  }\n  return L.point(a.x / l, a.y / l);\n}\n\nconst fa = (x: number, k: number): number => (x * x) / k;\n\nconst fr = (x: number, k: number): number => (k * k) / x;\n\n/**\n * get position form el.style.transform\n */\nfunction getPosition(el: HTMLElement): L.Point {\n  const translateString = el.style.transform\n    .split(\"(\")[1]\n    .split(\")\")[0]\n    .split(\",\");\n  return L.point(parseInt(translateString[0]), parseInt(translateString[1]));\n}\n\n/**\n * t is the temperature in the system\n */\nfunction computePositionStep(t: number) {\n  const area = (window.innerWidth * window.innerHeight) / 10;\n  // increase k to spread labels out\n  const k = 1.5 * Math.sqrt(area / markerList.length);\n  let dpos = L.point(0, 0);\n  let v_pos: L.Point;\n  let v: SpecialMarker;\n  let i: number;\n\n  for (i = 0; i < markerList.length; i++) {\n    v = markerList[i];\n    // get position of label v\n    v.disp = L.point(0, 0);\n    v_pos = getPosition((v.getTooltip()! as SpecialTooltip)._container);\n\n    // compute gravitational force\n    for (let j = 0; j < markerList.length; j++) {\n      const u = markerList[j];\n      if (i !== j) {\n        const u_pos = getPosition(\n          (u.getTooltip()! as SpecialTooltip)._container\n        );\n        dpos = v_pos.subtract(u_pos);\n        // if (true dpos !== 0) {\n        v.disp = v.disp.add(\n          normalize(dpos).multiplyBy(fr(dpos.distanceTo(L.point(0, 0)), k))\n        );\n        // }\n      }\n    }\n  }\n\n  // compute force between marker and tooltip\n  for (i = 0; i < markerList.length; i++) {\n    v = markerList[i];\n    v_pos = getPosition((v.getTooltip()! as SpecialTooltip)._container);\n    dpos = v_pos.subtract(getPosition(v._icon));\n    v.disp = v.disp.subtract(\n      normalize(dpos).multiplyBy(fa(dpos.distanceTo(L.point(0, 0)), k))\n    );\n  }\n\n  // calculate layout\n  for (i = 0; i < markerList.length; i++) {\n    const leafletTooltip = markerList[i].getTooltip() as SpecialTooltip;\n    if (leafletTooltip === undefined) continue;\n\n    const disp = markerList[i].disp;\n    let p = getPosition(leafletTooltip._container);\n    const d = scaleTo(\n      normalize(disp),\n      L.point(Math.min(Math.abs(disp.x), t), Math.min(Math.abs(disp.y), t))\n    );\n    p = p.add(d);\n    p = L.point(Math.ceil(p.x), Math.ceil(p.y));\n    L.DomUtil.setTransform(leafletTooltip._container, p);\n  }\n}\n\nasync function layoutByForce(randomize: boolean = false, times: number = 50) {\n  // weak implementation of locking -- we may occasionally run into a race\n  // condition where this breaks, but this shouldn't be a huge deal for now\n  if (guard) return;\n  guard = true;\n  console.log(\"layoutByForce\");\n\n  if (randomize) setRandomPos();\n\n  const start = Math.ceil(window.innerWidth / 10);\n  let temperature: number;\n  for (let i = 0; i < times; i += 1) {\n    temperature = start * (1 - i / (times - 1));\n    computePositionStep(temperature);\n\n    for (let marker of markerList) {\n      const leafletTooltip = marker.getTooltip() as SpecialTooltip;\n      if (leafletTooltip === undefined) continue;\n\n      let p = getPosition(leafletTooltip._container);\n      L.DomUtil.setTransform(leafletTooltip._container, p);\n    }\n\n    drawLine(map);\n\n    await new Promise((r) => setTimeout(r, 1));\n  }\n\n  setEdgePosition();\n  drawLine(map);\n\n  await new Promise((r) => setTimeout(r, 1));\n\n  guard = false;\n}\n\n/**\n * constrain tooltip labels to the bounds of the Leaflet map\n *\n * Labels that are outside of the bounds will be shifted so that they are\n * inside the bounds.\n */\nfunction setEdgePosition() {\n  const bounds = map.getBounds();\n  const northWest = map.latLngToLayerPoint(bounds.getNorthWest());\n  const southEast = map.latLngToLayerPoint(bounds.getSouthEast());\n\n  for (let i = 0; i < markerList.length; i++) {\n    const leafletTooltip = markerList[i].getTooltip() as SpecialTooltip;\n    if (leafletTooltip === undefined) continue;\n\n    const tooltip = getPosition(leafletTooltip._container);\n    const marker = getPosition(markerList[i]._icon);\n    const { offsetWidth: width, offsetHeight: height } =\n      leafletTooltip._container;\n\n    let isEdge = false;\n    if (marker.x > northWest.x && tooltip.x < northWest.x) {\n      tooltip.x = northWest.x;\n      isEdge = true;\n    } else if (marker.x < southEast.x && tooltip.x > southEast.x - width) {\n      tooltip.x = southEast.x - width;\n      isEdge = true;\n    }\n\n    if (marker.y > northWest.y && tooltip.y < northWest.y) {\n      tooltip.y = northWest.y;\n      isEdge = true;\n    } else if (marker.y < southEast.y && tooltip.y > southEast.y - height) {\n      tooltip.y = southEast.y - height;\n      isEdge = true;\n    }\n\n    if (!isEdge) {\n      if (marker.x < northWest.x && tooltip.x > northWest.x - width) {\n        tooltip.x = northWest.x - width;\n      } else if (marker.x > southEast.x && tooltip.x < southEast.x) {\n        tooltip.x = southEast.x;\n      }\n\n      if (marker.y < northWest.y && tooltip.y > northWest.y - height) {\n        tooltip.y = northWest.y - height;\n      } else if (marker.y > southEast.y && tooltip.y < southEast.y) {\n        tooltip.y = southEast.y;\n      }\n    }\n\n    L.DomUtil.setTransform(leafletTooltip._container, tooltip);\n  }\n}\n","import { useMap } from \"react-leaflet\";\nimport { useEffect, useState } from \"react\";\nimport { getMarkers, initialize, resetMarker } from \"./leaflet-tooltip-layout\";\nimport Leaflet, { Marker, PathOptions } from \"leaflet\";\nimport { GatewayType } from \"arpanet-map\";\n\nconst tooltipClassName = \"override-leaflet-tooltip-style\";\n\n/**\n * This is the check used in leaflet itself. Unfortunately, we have to use any here because the type definitions for leaflet types don't contain the information we need to check if the target is a marker.\n *\n * TODO find a way to do this without using the non-public _radius member\n */\nfunction isMarker(target: any): target is Marker {\n  return target.getLatLng && (!target._radius || target._radius <= 10);\n}\n\nconst defaultIcon = Leaflet.icon({\n  //\n  // Note: I did not have success using Webpack's base64 data-url image loader here, so for now I will load the image separately. It could be an issue with Leaflet, but I'd need to look into this further to pinpoint the issue.\n  //\n  iconUrl: \"circle-grey.png\",\n  iconSize: [10, 10],\n});\n\ntype MapContentsProps = {\n  url: string;\n  setIsSidebarOpen: (isSidebarOpen: boolean) => void;\n  setFocusedGateway: (focusedGateway: GatewayType) => void;\n};\n\nexport default function MapContents({\n  url,\n  setIsSidebarOpen,\n  setFocusedGateway,\n}: MapContentsProps): null {\n  const map = useMap();\n\n  const [geoJsonLayer, setGeoJsonLayer] = useState<Leaflet.GeoJSON | null>(\n    null\n  );\n  const [data, setData] = useState(null);\n\n  const loadData = (key: string): void => {\n    // clear all the existing markers from leaflet-tooltip-layout to avoid getting an error\n    getMarkers().length = 0;\n    // load the geoJSON data\n    fetch(`api/v1/map/${key}`)\n      .then((result) => result.json())\n      .then((json) => setData(json));\n  };\n\n  useEffect(() => loadData(url), [url]);\n\n  useEffect(() => {\n    // clear the previous map\n    map.eachLayer((layer) => {\n      layer.remove();\n    });\n\n    const _geoJsonLayer = Leaflet.geoJSON(data ?? undefined, {\n      style: (feature) => {\n        const s: PathOptions = {};\n\n        if (feature?.properties?.filename === \"USA.geojson\") {\n          s.color = \"#00aa00\";\n          // background map should not be clickable\n          s.interactive = false;\n        }\n\n        return s;\n      },\n      pointToLayer: (geoJsonPoint, latlng) =>\n        Leaflet.marker(latlng, { icon: defaultIcon }),\n      onEachFeature: function (feature, layer) {\n        // only consider point features, skip polylines, etc\n        if (feature?.geometry?.type !== \"Point\") {\n          // layer.classList += 'test';\n          // el.style.pointerEvents = 'none';\n          // layer.style({ cursor: 'crosshair' });\n          return;\n        }\n\n        const name = feature.properties.name;\n        const marker = layer;\n        const tooltip = marker.bindTooltip(name, { permanent: true });\n        tooltip.addTo(map);\n        tooltip.on(\"click\", function () {\n          setIsSidebarOpen(true);\n          setFocusedGateway(feature.properties);\n        });\n        if (isMarker(marker)) resetMarker(marker);\n        // The `leaflet-tooltip-layout` library overwrites the className option on tooltips, so this next line is a workaround. Note that the `addTo` call following `bindTooltip` above is a pre-requisite for this line to work.\n        marker.getTooltip()?.getElement()?.classList.add(tooltipClassName);\n      },\n    }).addTo(map);\n\n    setGeoJsonLayer(_geoJsonLayer);\n  }, [data, map, setFocusedGateway, setIsSidebarOpen]);\n\n  useEffect(() => {\n    initialize(map);\n  }, [geoJsonLayer, map]);\n\n  return null;\n}\n","import styled from \"styled-components\";\n\nconst StyledRibbonAnchor = styled.a`\n  z-index: 100;\n  position: fixed;\n  top: 0;\n  right: 0;\n\n  img {\n    height: 149px;\n    width: 149px;\n  }\n`;\n\nconst GitHubRibbon = (): React.ReactElement => (\n  <StyledRibbonAnchor href=\"https://github.com/bitoffdev/arpanet-map\">\n    <img\n      loading=\"lazy\"\n      src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_darkblue_121621.png?resize=149%2C149\"\n      alt=\"Fork me on GitHub\"\n      data-recalc-dims=\"1\"\n    />\n  </StyledRibbonAnchor>\n);\n\nexport default GitHubRibbon;\n","import Tabs, { TabPane } from \"rc-tabs\";\nimport { useEffect, useState } from \"react\";\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa\";\nimport { MapContainer } from \"react-leaflet\";\nimport Sidebar from \"react-sidebar\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nimport \"fontsource-overpass\";\n\n// we need to import these vendored css files so that everything renders as expected\nimport \"leaflet/dist/leaflet.css\";\nimport \"rc-tabs/assets/index.css\";\n\nimport GatewayDetail from \"./GatewayDetail\";\nimport Network from \"./MapContents\";\nimport { GatewayType, ManifestMapType } from \"arpanet-map\";\nimport GitHubRibbon from \"./GitHubRibbon\";\n\nimport {\n  MatomoProvider,\n  createInstance,\n  useMatomo,\n} from \"@datapunt/matomo-tracker-react\";\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n`;\n\nconst StyledButton = styled.button`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  justify-content: center;\n\n  & > * {\n    flex: 1;\n    font-size: 2em;\n  }\n`;\n\nconst StyledTabs = styled(Tabs)`\n  .rc-tabs-tab {\n    font-family: \"Overpass\";\n    font-size: 2em;\n    color: #444;\n    padding: 10px;\n  }\n\n  // hide the \"extra\" dropdown\n  .rc-tabs-nav-more {\n    display: none;\n  }\n\n  // restyle the indicators for more overflowing tabs using a gradient rather than a harsh, red border\n  .rc-tabs-nav-wrap-ping-left::before {\n    border: 0;\n    width: 30px;\n    background: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n  }\n\n  // restyle the indicators for more overflowing tabs using a gradient rather than a harsh, red border\n  .rc-tabs-nav-wrap-ping-right::after {\n    border: 0;\n    width: 30px;\n    background: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.5));\n  }\n`;\n\nconst tooltipClassName = \"override-leaflet-tooltip-style\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n  }\n\n  div.${tooltipClassName} {\n    font-family: \"Overpass\";\n    font-size: 1.5em;\n\n    // remove the default direction carrot / arrow\n    &::before {\n      display: none !important;\n    }\n  }\n`;\n\nfunction App() {\n  const [focusedGateway, setFocusedGateway] = useState<GatewayType | null>(\n    null\n  );\n  const [isSidebarOpen, setIsSidebarOpen] = useState<boolean>(false);\n  const [activeKey, setActiveKey] = useState<string | null>(null);\n  const [manifest, setManifest] = useState<{\n    snapshots: Array<ManifestMapType>;\n  } | null>(null);\n  const { trackPageView } = useMatomo();\n\n  const loadManifest = () =>\n    fetch(\"api/v1/map/mapsManifest.json\")\n      .then((result) => result.json())\n      .then((manifestJson) => {\n        setManifest(manifestJson);\n        // automatically load the first Arpanet snapshot\n        setActiveKey(manifestJson.snapshots[0].fileName);\n      });\n\n  useEffect(() => {\n    if (manifest != null) return;\n\n    loadManifest();\n  }, [manifest]);\n\n  // Track page view with Matomo\n  useEffect(() => {\n    trackPageView({\n      documentTitle: \"Arpanet Map\",\n    });\n  }, [trackPageView]);\n\n  const nextActiveMap = (steps: number) =>\n    setActiveKey((activeKey) => {\n      if (manifest?.snapshots == null || manifest.snapshots.length <= 1)\n        return activeKey;\n      const currentIndex = manifest.snapshots.findIndex(\n        (map: ManifestMapType) => map.fileName === activeKey\n      );\n      const newIndex = Math.max(\n        0,\n        Math.min(manifest.snapshots.length - 1, currentIndex + steps)\n      );\n      const newActiveMap = manifest.snapshots[newIndex].fileName;\n      return newActiveMap;\n    });\n\n  return (\n    <Sidebar\n      // sidebar is required by PropTypes, so use an empty div if necessary\n      sidebar={\n        focusedGateway ? (\n          <GatewayDetail gateway={focusedGateway} />\n        ) : (\n          <div></div>\n        )\n      }\n      open={isSidebarOpen}\n      onSetOpen={setIsSidebarOpen}\n      /* The sidebar's z-index must be in front of Leaflet. Leaflet's `leaflet-tooltip-pane` class has a z-index of 650 and `leaflet-bottom` has a z-index of 1000. */\n      styles={{ sidebar: { background: \"white\", zIndex: \"1200\" } }}\n      pullRight={true}\n    >\n      <GitHubRibbon />\n      <StyledContainer>\n        <GlobalStyle />\n        <MapContainer\n          style={{ flex: 1 }}\n          center={[39.74739, -105]}\n          zoom={4}\n          scrollWheelZoom={true}\n        >\n          {activeKey && (\n            <Network\n              url={activeKey}\n              setIsSidebarOpen={setIsSidebarOpen}\n              setFocusedGateway={setFocusedGateway}\n            />\n          )}\n        </MapContainer>\n        <StyledTabs\n          activeKey={activeKey ?? undefined}\n          onChange={setActiveKey}\n          tabBarStyle={{ flex: 1 }}\n          tabBarExtraContent={{\n            left: (\n              <StyledButton onClick={() => nextActiveMap(-1)}>\n                <FaAngleLeft />\n              </StyledButton>\n            ),\n            right: (\n              <StyledButton onClick={() => nextActiveMap(1)}>\n                <FaAngleRight />\n              </StyledButton>\n            ),\n          }}\n        >\n          {manifest &&\n            manifest.snapshots.map((snapshot) => (\n              <TabPane\n                tab={snapshot.partialDateString}\n                key={snapshot.fileName}\n              />\n            ))}\n        </StyledTabs>\n      </StyledContainer>\n    </Sidebar>\n  );\n}\n\nconst instance = createInstance({\n  urlBase: \"https://bitoffdev.matomo.cloud/\",\n  siteId: 2,\n});\n\nconst MatomaApp = () => (\n  <MatomoProvider value={instance}>\n    <App />\n  </MatomoProvider>\n);\n\nexport default MatomaApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}